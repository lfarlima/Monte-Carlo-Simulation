{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import panel as pn\n",
    "from pathlib import Path\n",
    "import hvplot.pandas\n",
    "import yfinance as yf\n",
    "\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "real_gdp_per_capita_change= real_gdp_per_capita.pct_change()\n",
    "real_gdp_per_capita_change.dropna(inplace=True)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "interest_rate_change= interest_rate.pct_change()\n",
    "interest_rate_change.dropna(inplace=True)\n",
    "\n",
    "\n",
    "SP_500 = yf.download('^GSPC',\n",
    "start='1980-01-01',\n",
    "end='2021-01-29',\n",
    "progress=False)\n",
    "\n",
    "# Display sample data\n",
    "SP_500.drop(columns= {'Open','High','Low','Adj Close','Volume'},inplace =True)\n",
    "SP_500_daily_returns=SP_500.pct_change().rename(columns={\"Close\": \"S&P_500\"})\n",
    "SP_500_daily_returns.dropna(inplace=True)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>GDP</th>\n",
       "      <th>S&amp;P_500</th>\n",
       "      <th>Interest Rate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1980-04-01</th>\n",
       "      <td>-0.023314</td>\n",
       "      <td>0.000882</td>\n",
       "      <td>-0.003023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1980-07-01</th>\n",
       "      <td>-0.004176</td>\n",
       "      <td>0.006040</td>\n",
       "      <td>-0.092912</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1980-10-01</th>\n",
       "      <td>0.015889</td>\n",
       "      <td>0.013311</td>\n",
       "      <td>-0.010614</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1981-04-01</th>\n",
       "      <td>-0.009665</td>\n",
       "      <td>0.004191</td>\n",
       "      <td>-0.008202</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1981-07-01</th>\n",
       "      <td>0.009226</td>\n",
       "      <td>-0.010975</td>\n",
       "      <td>0.131438</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 GDP   S&P_500  Interest Rate\n",
       "1980-04-01 -0.023314  0.000882      -0.003023\n",
       "1980-07-01 -0.004176  0.006040      -0.092912\n",
       "1980-10-01  0.015889  0.013311      -0.010614\n",
       "1981-04-01 -0.009665  0.004191      -0.008202\n",
       "1981-07-01  0.009226 -0.010975       0.131438"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_combine_pct = pd.concat([real_gdp_change,SP_500_daily_returns,ir_data_change], axis = \"columns\",join = \"inner\")\n",
    "df_combine_pct.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>GDP</th>\n",
       "      <th>S&amp;P_500</th>\n",
       "      <th>Interest Rate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>GDP</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.281477</td>\n",
       "      <td>0.094598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>S&amp;P_500</th>\n",
       "      <td>0.281477</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.079000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Interest Rate</th>\n",
       "      <td>0.094598</td>\n",
       "      <td>-0.079000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    GDP   S&P_500  Interest Rate\n",
       "GDP            1.000000  0.281477       0.094598\n",
       "S&P_500        0.281477  1.000000      -0.079000\n",
       "Interest Rate  0.094598 -0.079000       1.000000"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "correlation = df_combine_pct.corr()\n",
    "correlation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(correlation, vmin=-1, vmax=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_combine.plot(y=['GDP','Close','Interest Rate'],grid=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
